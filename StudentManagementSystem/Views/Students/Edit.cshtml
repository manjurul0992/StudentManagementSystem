@model StudentManagementSystem.Models.Student

@{
    ViewBag.Title = "Edit Student";
}

<div class="container mt-5">
    <h2 class="text-center alert alert-info">@ViewBag.Title</h2>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()

        <div class="card shadow-sm">
            <div class="card-body">
                <h4 class="card-title">Student Details</h4>
                <hr />

                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                @Html.HiddenFor(model => model.StudentId)

                <div class="mb-3 row">
                    @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter student name" } })
                    </div>
                    <div class="col-sm-6">
                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3 row">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", type = "date", min = "1990-01-01" } })
                    </div>
                    <div class="col-sm-6">
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3 row">
                    @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter class" } })
                    </div>
                    <div class="col-sm-6">
                        @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3 row">
                    @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-4">
                        @Html.EnumDropDownListFor(model => model.Section, new { @class = "form-select" })
                    </div>
                    <div class="col-sm-6">
                        @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="d-flex justify-content-end">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div class="mt-3">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
